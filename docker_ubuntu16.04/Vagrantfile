# -*- mode: ruby -*-
# vi: set ft=ruby :

# check HostOS Module
module OSENV
  def OSENV.windows?
    (/cygwin|mswin|mingw|bccwin|wince|emx/ =~ RUBY_PLATFORM) != nil
  end

  def OSENV.mac?
    (/darwin/ =~ RUBY_PLATFORM) != nil
  end

  def OSENV.unix?
    !OSENV.windows?
  end

  def OSENV.linux?
    OSENV.unix? and not OSENV.mac?
  end

  def OSENV.in_china?
    Time.now.getlocal.zone == "CST"
  end
end

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "ubuntu/xenial64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  config.vm.network "forwarded_port", guest: 3000, host: 3000

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.hostname = "docker.devel"
  config.vm.network "private_network", ip: "192.168.44.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"
  if OSENV.windows?
    puts "Runnning on Windows: Sync folder by rsync"
    config.vm.synced_folder "./src", "/home/ubuntu/src", type: "rsync", rsync__exclude: [".git/","vendor/bundle"]
  else
    puts "Running on Linux, MacOS, or UNIX: Sync folder by nfs"
    config.vm.synced_folder "./src", "/home/ubuntu/src", type: "nfs"
  end

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
    vb.cpus = "2"
    vb.memory = "2024"
    vb.customize ["modifyvm", :id, "--ioapic", "on"]
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  #config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get install -y apache2
  #SHELL

  # Vagrant Proxy Conf
  # ex: vagrant plugin install vagrant-proxyconf
  if OSENV.in_china?
    puts "Timezone is CST"
    puts "Setting Proxy by vagrant-proxyconf"
    config.proxy.http     = "http://192.168.44.1:3128/"
    config.proxy.https     = "http://192.168.44.1:3128/"
    config.proxy.no_proxy = "localhost,127.0.0.1"
  end

  # Custom provisioning 
  config.vm.provision :shell do |shell|
    shell.path = "vagrant_scripts/bootstrap.sh"
    shell.args = [
      # vhost ip
      '192.168.44.1',
      # china or other
      'other']
    # comment out this line if there isn't China
    if OSENV.in_china?
      puts "Timezone is CST"
      shell.args[1] = 'china'
    end
  end
  # Always Provistion
  config.vm.provision :shell , run: "always"  do |always_shell|
    if !OSENV.windows?
      #puts "Running on Linux, MacOS, or UNIX: vagrant_scripts/always.sh"
      always_shell.path = "vagrant_scripts/always.sh"
    end
  end
end
